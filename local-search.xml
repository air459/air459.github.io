<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>termux安装kali</title>
    <link href="/2025/07/07/termux%E5%AE%89%E8%A3%85kali/"/>
    <url>/2025/07/07/termux%E5%AE%89%E8%A3%85kali/</url>
    
    <content type="html"><![CDATA[<blockquote><p>官网<a href="https://www.kali.org/docs/nethunter/nethunter-rootless/">NetHunterRootless</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">termux-setup-storage #获取储存权限<br>pkg install wget     #安装wget<br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">##从这里开始需要梯子</span></span><br>wget -O install-nethunter-termux https://offs.ec/2MceZWr #下载安装脚本<br>chmod +x install-nethunter-termux #给脚本权限<br>./install-nethunter-termux #==运行安装脚步<br></code></pre></td></tr></table></figure><p><img src="https://img.picui.cn/free/2025/07/06/686a8945ca8b0.jpg" alt="实例"></p><p>安装完后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">以下来自官网的使用</span><br><br>nh #启动kali<br>nh -r #使用root用户启动kali<br>nh kex passwd #配置KeX密码(仅在第一次使用前需要)<br>nh kex &amp; #启动Kali NetHunter桌面体验用户会话<br>nh kex stop #停止Kali NetHunter桌面<br>nh &lt;command&gt; # 在NetHunter环境中运行<br><br></code></pre></td></tr></table></figure><p><em>nh</em> 可以替换为 <em>nethunter</em><br>如果要在root以后上运行 nh 后面要添加 -r</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nethuntet -r kex &amp; #启动root用户的桌面<br></code></pre></td></tr></table></figure><p>tap: kali的桌面vnc端口普通用户: 5000, root:5001, 用户密码均是kali</p><p>安卓vnc应用可以使用使用Avnc<br><a href="https://github.com/gujjwal00/avnc">Avnc github</a><br>目前Avnc已经上架谷歌商店了</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>termux美化</title>
    <link href="/2025/07/06/termux%E7%BE%8E%E5%8C%96/"/>
    <url>/2025/07/06/termux%E7%BE%8E%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="1-安装字体"><a href="#1-安装字体" class="headerlink" title="1.安装字体"></a>1.安装字体</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://xxx/1.ttf #安装字体<br>mv 1.ttf font.ttf #重命名<br>mv font.ttf ~/.termux/ #安装<br><span class="hljs-meta prompt_">#</span><span class="language-bash">新建会话</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">字体生效</span><br></code></pre></td></tr></table></figure><h1 id="修改-bashrc"><a href="#修改-bashrc" class="headerlink" title="修改.bashrc"></a>修改.bashrc</h1><h3 id="设置shell"><a href="#设置shell" class="headerlink" title="设置shell $"></a>设置shell $</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">nano .bashrc #打开.bashrc脚步<br><span class="hljs-meta prompt_">#</span><span class="language-bash">任意取一行</span><br>user=&quot;air&quot;<br>PS1=&quot;\n\[\e[1;34m\]\w \[\e[0;33m\]\$(date +%H:%M:%S)\[\e[0m\]\n\[\e[1;31m\]$user\[\e[0m\]@\[\e[1;32m\]localhost\[\e[0m\] \$(if [[ \$? -eq 0 ]]; then echo -e &#x27;\[\e[1;32m\]&#x27;; else echo -e &#x27;\[\e[1;31m\]&#x27;; fi)\\\$\[\e[0m\] &quot;<br></code></pre></td></tr></table></figure><h3 id="安装fastfetch"><a href="#安装fastfetch" class="headerlink" title="安装fastfetch"></a>安装fastfetch</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pkg install fastfetch<br></code></pre></td></tr></table></figure><h3 id="设置ssh服务"><a href="#设置ssh服务" class="headerlink" title="设置ssh服务"></a>设置ssh服务</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell">pkg install openssh #安装ssh<br>passwd #设置密码<br><span class="hljs-meta prompt_">#</span><span class="language-bash">输入密码两次</span><br>nano .bashrc #打开.bashrc文件<br><span class="hljs-meta prompt_">#</span><span class="language-bash">找个地方输入</span><br>sshd -p 1145 #设置ssh端口为1145<br>ifconfig | grep -Eo &#x27;inet (addr:)?([0-9]*\.)&#123;3&#125;[0-9]*&#x27; | grep -Eo &#x27;([0-9]*\.)&#123;3&#125;[0-9]*&#x27; | grep -v &#x27;127.0.0.1&#x27; &gt; ipv4.log #把ipv4地址存在ipv4.log<br>ipv4=$(&lt;ipv4.log) #把ipv4.log内容存在ipv4变量中<br>rm -rf ipv4.log #删除ipv4.log<br>clear #清除终端输出<br>echo -e &quot;\033[32mssh: \033[35m$ipv4\033[32m:\033[34m1145&quot; #每次新会话终端输出ssh的ip:地址<br></code></pre></td></tr></table></figure><h3 id="设置启动时间"><a href="#设置启动时间" class="headerlink" title="设置启动时间"></a>设置启动时间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo -e &quot;\033[32m启动时间: \033[33m$(date +%H:%M:%S)&quot; #写在.bashrc文件中<br></code></pre></td></tr></table></figure><h3 id="设置会话结束时间"><a href="#设置会话结束时间" class="headerlink" title="设置会话结束时间"></a>设置会话结束时间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">nano .bash_logout<br><span class="hljs-meta prompt_">#</span><span class="language-bash">输入</span><br>rm -rf ~/end.log #删除end.log文件<br>echo &quot;$(date +%m月%d日%H:%M:%S)&quot; &gt;&gt; ~/end.log #把时间存在end.log中<br><span class="hljs-meta prompt_">#</span><span class="language-bash">退出nano</span><br>nano .bashrc<br><span class="hljs-meta prompt_">#</span><span class="language-bash">找个地方输入</span><br>end=$(&lt;end.log)<br>rm -rf end.log<br>echo -e &quot;\033[32m上次会话结束时间: \033[35m$end&quot;<br></code></pre></td></tr></table></figure><h2 id="调整一下"><a href="#调整一下" class="headerlink" title="调整一下"></a>调整一下</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs shell">user=&quot;air&quot;<br>PS1=&quot;\n\[\e[1;34m\]\w \[\e[0;33m\]\$(date +%H:%M:%S)\[\e[0m\]\n\[\e[1;31m\]$user\[\e[0m\]@\[\e[1;32m\]localhost\[\e[0m\] \$(if [[ \$? -eq 0 ]]; then echo -e &#x27;\[\e[1;32m\]&#x27;; else echo -e &#x27;\[\e[1;31m\]&#x27;; fi)\\\$\[\e[0m\] &quot;<br>sshd -p 1145<br>rm -rf ipv4.log<br>ifconfig | grep -Eo &#x27;inet (addr:)?([0-9]*\.)&#123;3&#125;[0-9]*&#x27; | grep -Eo &#x27;([0-9]*\.)&#123;3&#125;[0-9]*&#x27; | grep -v &#x27;127.0.0.1&#x27; &gt; ipv4.log<br>ipv4=$(&lt;ipv4.log)<br>rm -rf ipv4.log<br>clear<br>fastfetch<br>echo<br>echo -e &quot;\033[32mssh: \033[35m$ipv4\033[32m:\033[34m1145&quot;<br>echo<br>end=$(&lt;end.log)<br>rm -rf end.log<br>echo -e &quot;\033[32m上次会话结束时间: \033[35m$end&quot;<br>echo -e &quot;\033[32m启动时间: \033[33m$(date +%H:%M:%S)&quot;<br></code></pre></td></tr></table></figure><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><p><img src="https://img.picui.cn/free/2025/07/06/686a82f9e2e0c.jpg" alt="效果图"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>termux的使用</title>
    <link href="/2025/07/05/termux%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2025/07/05/termux%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="liunx基础（换源）"><a href="#liunx基础（换源）" class="headerlink" title="liunx基础（换源）"></a>liunx基础（换源）</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">termux-change-repo<br><span class="hljs-meta prompt_">#</span><span class="language-bash">选第二个安空格</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">[]里面出现*按回车</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">自己选一个镜像源</span><br></code></pre></td></tr></table></figure><h3 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a>安装包</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">pkg up #更新pkg<br>pkg install wget #安装wget<br></code></pre></td></tr></table></figure><h1 id="使用ssh链接服务器"><a href="#使用ssh链接服务器" class="headerlink" title="使用ssh链接服务器"></a>使用ssh链接服务器</h1><p>安装ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pkg install openssh #安装ssh<br></code></pre></td></tr></table></figure><p>连接ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh user@ip<br><span class="hljs-meta prompt_">#</span><span class="language-bash">或</span><br>ssh ip -p port<br></code></pre></td></tr></table></figure><p>运行后输入系统的用户密码就行了<br>第一次连接陌生设备是会要求输入yes</p><h1 id="安装liunx"><a href="#安装liunx" class="headerlink" title="安装liunx"></a>安装liunx</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">pkg install proot-distro #安装pd<br>pd list #那组可以安装的liunx<br>pd install debian #安装debian 需要梯子<br>pd login debian #进入debian系统<br></code></pre></td></tr></table></figure><p><em>pd</em>可以替换为<em>proot-distro</em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/1970/01/01/hello-world/"/>
    <url>/1970/01/01/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
